name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - "v*" # This will trigger the workflow on any tag starting with 'v'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22" # Specify the Node.js version you want to use

      - name: Install dependencies
        run: npm ci

      - name: build dependencies
        run: npm run build

      - name: Install Cypress
        uses: cypress-io/github-action@v6
        with:
          install: true
          start: npm run test-server
          wait-on: http://localhost:3000
          wait-on-timeout: 60
          command: npm run test-cypress && kill $!
        env:
          CYPRESS_VERIFY_TIMEOUT: 60000 # Increase the timeout to 60 seconds

  publish:
    needs: test # This ensures publishing only happens if tests pass
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-demo:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm ci

      - name: Build demo
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./demo
